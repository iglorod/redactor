{"version":3,"sources":["components/UI/FontSizePicker/FontSizePicker.module.css","components/Header/Header.module.css","serviceWorker.js","utility/text-blocks.js","store/reducer.js","store/actionTypes.js","components/UI/ColorPicker/ColorPicker.js","components/UI/FontSizePicker/FontSizeItem/FontSizeItem.js","components/UI/FontSizePicker/FontSizePicker.js","components/Header/TextActions/TextActions.js","store/actions.js","components/Header/Header.js","utility/selection.js","components/TextArea/TextItem/TextItem.js","components/TextArea/TextArea.js","components/Layout/Layout.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","objectsAreEqual","obj1","obj2","Object","keys","length","isEqual","key","mergeTwoPieces","textPiecesClone","donorIndex","receiverIndex","newPieceIndex","newCursorPosition","text","splice","updatedTextPieces","index","cursorPosition","joinTextPiecesByIndex","firstIndex","secondIndex","joinTextPieces","textPieces","newPieces","reduce","piece","push","splitTextPiece","pieceIndex","selectedRange","newProperty","pieceText","split","leftText","join","middleText","rightText","leftObj","middleObj","rightObj","clearEmptyTextPieces","undefined","initialState","fontSize","color","backgroundColor","selectionRange","reducer","state","action","type","content","caretPosition","cursorIndex","brElement","removeIndex","currentIndex","range","Array","isArray","property","insertIndex","ColorPicker","props","popover","triangle","onChangeComplete","handleChange","OverlayTrigger","trigger","delay","rootCloseEvent","placement","overlay","Popover","Content","Button","className","variant","label","FontSizeItem","Dropdown","Item","active","currFontSize","onClick","changeFontSize","FontSizePicker","SplitButton","id","title","classes","fontSizePicker","map","bind","connect","dispatch","setNewProperty","hex","setNewPropertyActionCreator","useState","setFontSize","handleFontChange","header","console","log","jsonTextPieces","prevPiece","JSON","stringify","getTextPiecesJson","getSelection","selection","anchorOffset","extentOffset","document","createRange","setSelection","setSelectionRangeActionCreator","spanEl","useRef","useEffect","current","focus","element","position","sel","setStart","setEnd","collapse","removeAllRanges","addRange","setCaret","childNodes","textStyle","ref","style","contentEditable","suppressContentEditableWarning","onSelect","reverse","onKeyDown","event","keyCode","preventDefault","addBreak","removeBreak","onInput","target","textContent","onChange","changeText","changeTextActionCreator","addTextBreak","addBreakActionCreator","removeTextBreak","removeBreakActionCreator","textTypingHandler","cursor","Layout","App","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f74ce803.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontSizePicker\":\"FontSizePicker_fontSizePicker__3aAWg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__VI-pO\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const objectsAreEqual = (obj1, obj2) => {\r\n    if (!obj1 || !obj2) return false;\r\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) return false;\r\n\r\n    let isEqual = true;\r\n    for (let key in obj1) {\r\n        if (key === 'text') continue;\r\n        isEqual = obj1[key] === obj2[key] && isEqual;\r\n    }\r\n\r\n    return isEqual;\r\n}\r\n\r\nexport const mergeTwoPieces = (textPiecesClone, donorIndex, receiverIndex) => {\r\n    const newPieceIndex = receiverIndex;\r\n    const newCursorPosition = textPiecesClone[receiverIndex].text.length;\r\n\r\n    textPiecesClone[receiverIndex].text = textPiecesClone[receiverIndex].text + textPiecesClone[donorIndex].text;\r\n    textPiecesClone.splice(donorIndex, 1);\r\n\r\n    return { updatedTextPieces: textPiecesClone, index: newPieceIndex, cursorPosition: newCursorPosition };\r\n}\r\n\r\nexport const joinTextPiecesByIndex = (textPiecesClone, firstIndex, secondIndex) => {\r\n    let newPieceIndex = 0;\r\n    let newCursorPosition = 0;\r\n\r\n    if (objectsAreEqual(textPiecesClone[firstIndex], textPiecesClone[secondIndex])) {\r\n        if (firstIndex > secondIndex) {\r\n            return mergeTwoPieces(textPiecesClone, firstIndex, secondIndex);\r\n        } else {\r\n            return mergeTwoPieces(textPiecesClone, secondIndex, firstIndex);\r\n        }\r\n    }\r\n    return { updatedTextPieces: textPiecesClone, index: newPieceIndex, cursorPosition: newCursorPosition };\r\n}\r\n\r\nexport const joinTextPieces = (...textPieces) => {\r\n    const newPieces = textPieces.reduce((newPieces, piece, index) => {\r\n        if (!piece) return newPieces;\r\n\r\n        if (index > 0) {\r\n            if (objectsAreEqual(textPieces[index - 1], piece)) {\r\n                newPieces[newPieces.length - 1].text = newPieces[newPieces.length - 1].text + piece.text;\r\n            } else newPieces.push(piece);\r\n        } else newPieces.push(piece)\r\n\r\n        return newPieces;\r\n    }, []);\r\n\r\n    return newPieces;\r\n}\r\n\r\nexport const splitTextPiece = (textPiecesClone, pieceIndex, selectedRange, newProperty) => {\r\n    const piece = textPiecesClone[pieceIndex];\r\n\r\n    const pieceText = textPiecesClone[pieceIndex].text.split('');\r\n\r\n    const leftText = pieceText.splice(0, selectedRange[0]).join('');\r\n    const middleText = pieceText.splice(0, selectedRange[1] - selectedRange[0]).join('');\r\n    const rightText = pieceText.join('');\r\n\r\n    const leftObj = { ...piece, text: leftText }\r\n    const middleObj = { ...piece, text: middleText, ...newProperty }\r\n    const rightObj = { ...piece, text: rightText };\r\n\r\n    return clearEmptyTextPieces(leftObj, middleObj, rightObj);\r\n}\r\n\r\nexport const clearEmptyTextPieces = (...textPieces) => {\r\n    const newPieces = textPieces.reduce((newPieces, piece, index) => {\r\n        if (piece && piece.text === undefined) {\r\n            newPieces.push(piece)\r\n            return newPieces;\r\n        }\r\n\r\n        if (!piece || piece.text.length === 0) return newPieces;\r\n\r\n        newPieces.push(piece)\r\n        return newPieces;\r\n    }, []);\r\n\r\n    return newPieces;\r\n}\r\n\r\nexport const getTextPiecesJson = (textPieces) => {\r\n    const jsonTextPieces = textPieces\r\n        .reduce((jsonTextPieces, piece, index) => {\r\n            if (index === 0) return [{ ...piece }];\r\n            if (Object.keys(piece).length === 0) return jsonTextPieces;\r\n\r\n            const prevPiece = jsonTextPieces[jsonTextPieces.length - 1];\r\n\r\n            if (objectsAreEqual(prevPiece, piece)) {\r\n                prevPiece.text = prevPiece.text + piece.text;\r\n            } else jsonTextPieces.push({...piece});\r\n\r\n            return jsonTextPieces;\r\n        }, [])\r\n\r\n    return JSON.stringify(jsonTextPieces, null, 2);\r\n}\r\n","import * as actionTypes from './actionTypes';\r\nimport { joinTextPiecesByIndex, joinTextPieces, splitTextPiece } from '../utility/text-blocks';\r\n\r\nconst initialState = {\r\n    textPieces: [\r\n        {\r\n          text: 'Hi My lovely',\r\n          fontSize: '16px',\r\n          color: '#5300eb',\r\n          backgroundColor: '#fad0c3'\r\n        },\r\n        {\r\n          text: 'little',\r\n          fontSize: '32px',\r\n          color: '#db3e00',\r\n          backgroundColor: '#c1e1c5'\r\n        },\r\n        {},\r\n        {\r\n          text: 'Ponny',\r\n          fontSize: '14px',\r\n          color: '#ffffff',\r\n          backgroundColor: '#006b76'\r\n        }\r\n      ],\r\n    selectionRange: [0, 0],\r\n    pieceIndex: 0,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.CHANGE_TEXT: {\r\n            const textPiecesClone = [...state.textPieces];\r\n            textPiecesClone[action.pieceIndex].text = action.content;\r\n\r\n            return {\r\n                ...state,\r\n                textPieces: [...textPiecesClone],\r\n                selectionRange: [action.caretPosition, action.caretPosition],\r\n                pieceIndex: action.pieceIndex,\r\n            };\r\n        }\r\n\r\n        case actionTypes.ADD_BREAK: {\r\n            const textPiecesClone = [...state.textPieces];\r\n            let cursorIndex = action.pieceIndex + 2;\r\n\r\n            const leftText = textPiecesClone[action.pieceIndex].text.split('');\r\n            const rightText = leftText.splice(action.caretPosition, leftText.length - action.caretPosition);\r\n\r\n            textPiecesClone[action.pieceIndex].text = leftText.join('');\r\n            const rightObj = { ...textPiecesClone[action.pieceIndex] };\r\n            rightObj.text = rightText.join('');\r\n\r\n            \r\n            textPiecesClone.splice(action.pieceIndex + 1, 0, {}, rightObj);\r\n            if (textPiecesClone[action.pieceIndex].text.length === 0 && textPiecesClone[action.pieceIndex - 1] && textPiecesClone[action.pieceIndex - 1].text) {\r\n                textPiecesClone.splice(action.pieceIndex, 1);\r\n                cursorIndex = action.pieceIndex + 1;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                textPieces: [...textPiecesClone],\r\n                selectionRange: [0, 0],\r\n                pieceIndex: cursorIndex,\r\n            };\r\n        }\r\n\r\n        case actionTypes.REMOVE_BREAK: {\r\n            let textPiecesClone = [...state.textPieces];\r\n            const brElement = textPiecesClone[action.removeIndex];\r\n            \r\n            if (brElement && Object.keys(brElement).length === 0) {\r\n                textPiecesClone.splice(action.removeIndex, 1);\r\n\r\n                if (action.currentIndex > action.removeIndex) {\r\n                    --action.currentIndex;\r\n                    --action.removeIndex;\r\n                }\r\n\r\n                const { updatedTextPieces, index, cursorPosition } = joinTextPiecesByIndex(textPiecesClone, action.currentIndex, action.removeIndex);\r\n                \r\n                return {\r\n                    ...state,\r\n                    textPieces: [...updatedTextPieces],\r\n                    selectionRange: [cursorPosition, cursorPosition],\r\n                    pieceIndex: index,\r\n                };\r\n            }\r\n            return state;\r\n        }\r\n\r\n        case actionTypes.SET_SELECTION: {\r\n            let range = action.range;\r\n            if (!Array.isArray(range)) range = [range, range];\r\n\r\n            return {\r\n                ...state,\r\n                selectionRange: range,\r\n                pieceIndex: action.pieceIndex,\r\n            };\r\n        }\r\n\r\n        case actionTypes.SET_NEW_PROPERTY: {\r\n            const textPiecesClone = [...state.textPieces];\r\n\r\n            let newPieces = splitTextPiece(textPiecesClone, action.pieceIndex, action.selectedRange, action.property);\r\n            newPieces = joinTextPieces(textPiecesClone[action.pieceIndex - 1], ...newPieces, textPiecesClone[action.pieceIndex + 1]);\r\n\r\n            const insertIndex = action.pieceIndex - 1;\r\n            textPiecesClone.splice(insertIndex >= 0 ? insertIndex : 0, insertIndex >= 0 ? 3 : 2, ...newPieces);\r\n\r\n            return {\r\n                ...state,\r\n                textPieces: [...textPiecesClone],\r\n                selectionRange: [0, 0],\r\n                pieceIndex: action.pieceIndex,\r\n            };\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","export const SET_SELECTION = 'SET_SELECTION';\r\nexport const CHANGE_TEXT = 'CHANGE_TEXT';\r\nexport const ADD_BREAK = 'ADD_BREAK';\r\nexport const REMOVE_BREAK = 'REMOVE_BREAK';\r\nexport const SET_NEW_PROPERTY = 'SET_NEW_PROPERTY';\r\n\r\n","import React from 'react';\r\nimport { GithubPicker } from 'react-color';\r\nimport { OverlayTrigger, Button, Popover } from 'react-bootstrap';\r\n\r\nimport './ColorPicker.css';\r\n\r\nconst ColorPicker = (props) => {\r\n    const popover = (\r\n        <GithubPicker triangle={'hide'} onChangeComplete={props.handleChange} />\r\n    )\r\n\r\n    return (\r\n        <OverlayTrigger\r\n            trigger={'focus'}\r\n            delay={100}\r\n            rootCloseEvent={'click'}\r\n            placement={'bottom'}\r\n            overlay={\r\n                <Popover>\r\n                    <Popover.Content>\r\n                        {popover}\r\n                    </Popover.Content>\r\n                </Popover>\r\n            }\r\n        >\r\n            <Button className={'color-picker-button'} variant=\"light\">\r\n                {props.label}\r\n            </Button>\r\n        </OverlayTrigger>\r\n    )\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React from 'react';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\nconst FontSizeItem = (props) => {\r\n    return (\r\n        <Dropdown.Item\r\n            active={props.currFontSize === props.fontSize ? true : false}\r\n            onClick={props.changeFontSize}\r\n        >\r\n            {props.fontSize}\r\n        </Dropdown.Item>\r\n    )\r\n}\r\n\r\nexport default FontSizeItem;\r\n","import React from 'react';\r\nimport { SplitButton } from 'react-bootstrap';\r\n\r\nimport FronSizeItem from './FontSizeItem/FontSizeItem';\r\nimport classes from './FontSizePicker.module.css';\r\n\r\nconst FontSizePicker = (props) => {\r\n    const fontSizesArray = ['12px', '14px', '16px', '32px', '48px', '64px'];\r\n\r\n    return (\r\n        <>\r\n            <SplitButton\r\n                id={`dropdown-split-variants-light`}\r\n                variant={'light'}\r\n                title={`Font size: ${props.fontSize}`}\r\n                onClick={props.onClick}\r\n                className={classes.fontSizePicker}\r\n            >\r\n                {\r\n                    fontSizesArray.map(fontSize => (\r\n                        <FronSizeItem\r\n                            key={fontSize}\r\n                            fontSize={fontSize}\r\n                            currFontSize={props.fontSize}\r\n                            changeFontSize={props.changeFontSize.bind(this, fontSize)} />\r\n                    ))\r\n                }\r\n            </SplitButton>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FontSizePicker;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setNewPropertyActionCreator } from '../../../store/actions';\r\nimport ColorPicker from '../../UI/ColorPicker/ColorPicker';\r\nimport FontSizePicker from '../../UI/FontSizePicker/FontSizePicker';\r\n\r\nconst TextActions = (props) => {\r\n    const [fontSize, setFontSize] = useState('12px');\r\n\r\n    const handleFontColorChange = ({ hex }) => {\r\n        if (props.selectedRange[0] === props.selectedRange[1]) return;\r\n        props.setNewProperty(props.selectedRange, props.pieceIndex, { color: hex });\r\n    }\r\n\r\n    const handleBackgroundChange = ({ hex }) => {\r\n        if (props.selectedRange[0] === props.selectedRange[1]) return;\r\n        props.setNewProperty(props.selectedRange, props.pieceIndex, { backgroundColor: hex });\r\n    }\r\n\r\n    const handleFontChange = (fontSize) => {\r\n        if (props.selectedRange[0] === props.selectedRange[1]) return;\r\n        props.setNewProperty(props.selectedRange, props.pieceIndex, { fontSize });\r\n    }\r\n\r\n    const changeFontSize = (fontSize) => {\r\n        setFontSize(fontSize);\r\n        handleFontChange(fontSize);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ColorPicker label={'Font color'} handleChange={handleFontColorChange} />\r\n            <ColorPicker label={'Background'} handleChange={handleBackgroundChange} />\r\n\r\n            <FontSizePicker\r\n                fontSize={fontSize}\r\n                changeFontSize={changeFontSize}\r\n                onClick={handleFontChange.bind(this, fontSize)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedRange: state.selectionRange,\r\n        pieceIndex: state.pieceIndex,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setNewProperty: (selectedRange, pieceIndex, hex) => { dispatch(setNewPropertyActionCreator(selectedRange, pieceIndex, hex)) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TextActions);\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const changeTextActionCreator = (pieceIndex, content, caretPosition) => {\r\n    return {\r\n        type: actionTypes.CHANGE_TEXT,\r\n        pieceIndex,\r\n        content,\r\n        caretPosition,\r\n    }\r\n}\r\n\r\nexport const addBreakActionCreator = (pieceIndex, caretPosition) => {\r\n    return {\r\n        type: actionTypes.ADD_BREAK,\r\n        pieceIndex,\r\n        caretPosition,\r\n    }\r\n}\r\n\r\nexport const removeBreakActionCreator = (currentIndex, removeIndex) => {\r\n    return {\r\n        type: actionTypes.REMOVE_BREAK,\r\n        currentIndex,\r\n        removeIndex,\r\n    }\r\n}\r\n\r\nexport const setSelectionRangeActionCreator = (pieceIndex, range) => {\r\n    return {\r\n        type: actionTypes.SET_SELECTION,\r\n        pieceIndex,\r\n        range,\r\n    }\r\n}\r\n\r\nexport const setNewPropertyActionCreator = (selectedRange, pieceIndex, property) => {\r\n    return {\r\n        type: actionTypes.SET_NEW_PROPERTY,\r\n        selectedRange,\r\n        pieceIndex,\r\n        property,\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { getTextPiecesJson } from '../../utility/text-blocks';\r\nimport TextActions from './TextActions/TextActions';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    const showJson = () => {\r\n        console.log(getTextPiecesJson(props.textPieces));\r\n    }\r\n\r\n    return (\r\n        <header className={classes.header}>\r\n            <TextActions />\r\n            <Button variant=\"light\" onClick={showJson}>Show JSON (in concole)</Button>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        textPieces: state.textPieces,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","export const getSelection = () => {\r\n    if (window.getSelection) {\r\n        const selection = window.getSelection();\r\n        return [selection.anchorOffset, selection.extentOffset];\r\n    }\r\n\r\n    const selection = document.selection.createRange();\r\n    return [selection.anchorOffset, selection.extentOffset];\r\n}\r\n\r\nexport const setCaret = (element, position) => {\r\n    if (!element || element.length < position[1]) return;\r\n    if (position[0] < position[1]) return;\r\n\r\n    const sel = window.getSelection();\r\n    const range = document.createRange();\r\n\r\n    range.setStart(element, position[0]);\r\n    range.setEnd(element, position[1]);\r\n    range.collapse(true);\r\n\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n}\r\n\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setSelectionRangeActionCreator } from '../../../store/actions';\r\nimport { getSelection, setCaret } from '../../../utility/selection';\r\n\r\nconst TextItem = props => {\r\n    const { piece } = props;\r\n    const spanEl = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (props.cursorPosition === null) return;\r\n\r\n        if (spanEl.current) spanEl.current.focus();\r\n        setCaret(spanEl.current ? spanEl.current.childNodes[0] : null, props.cursorPosition);\r\n    }, [props.cursorPosition]);\r\n\r\n    if (Object.keys(piece).length === 0) return <br />\r\n\r\n    const changeHandler = (event) => {\r\n        const content = event.target.textContent;\r\n        const caretPosition = getSelection()[0];\r\n        props.onChange(props.index, content, caretPosition);\r\n    }\r\n\r\n    const breakStringHandler = (event) => {\r\n        const caretPosition = getSelection()[0];\r\n\r\n        if (event.keyCode === 13) {                                                 // hit 'enter' key\r\n            event.preventDefault();\r\n            props.addBreak(props.index, caretPosition);\r\n        } else if (event.keyCode === 8 && caretPosition === 0) {                    // hit 'backspace' key\r\n            event.preventDefault();\r\n            props.removeBreak(props.index, props.index - 1);\r\n        } else if (event.keyCode === 46 && caretPosition === piece.text.length) {   // hit 'delete' key\r\n            event.preventDefault();\r\n            props.removeBreak(props.index, props.index + 1);\r\n        }\r\n    }\r\n\r\n    const setSelectionRange = () => {\r\n        const range = getSelection();\r\n        if (range[0] < range[1]) props.setSelection(props.index, range);\r\n        else if (range[0] > range[1]) props.setSelection(props.index, range.reverse());\r\n    }\r\n\r\n    const textStyle = {\r\n        fontSize: piece.fontSize,\r\n        color: piece.color,\r\n        backgroundColor: piece.backgroundColor,\r\n    }\r\n\r\n    return (\r\n        <span\r\n            ref={spanEl}\r\n            style={textStyle}\r\n            className={'text-block'}\r\n            contentEditable\r\n            suppressContentEditableWarning\r\n            onSelect={setSelectionRange}\r\n            onKeyDown={breakStringHandler}\r\n            onInput={changeHandler}\r\n        >\r\n            {piece.text}\r\n        </span>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSelection: (pieceIndex, range) => { dispatch(setSelectionRangeActionCreator(pieceIndex, range)) },\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TextItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TextItem from './TextItem/TextItem';\r\nimport { changeTextActionCreator, addBreakActionCreator, removeBreakActionCreator } from '../../store/actions';\r\nimport './TextArea.css';\r\n\r\nconst TextArea = (props) => {\r\n    const { changeText, addTextBreak, removeTextBreak } = props;\r\n\r\n    const textTypingHandler = (index, content, caretPosition) => {\r\n        changeText(index, content, caretPosition);\r\n    }\r\n\r\n    const addBreak = (index, caretPosition) => {\r\n        addTextBreak(index, caretPosition);\r\n    }\r\n\r\n    const removeBreak = (currentIndex, removeIndex) => {\r\n        removeTextBreak(currentIndex, removeIndex);\r\n    }\r\n\r\n    const cursor = {\r\n        index: props.pieceIndex,\r\n        position: props.caretPosition,\r\n    }\r\n\r\n    return (\r\n        <div className='area'>\r\n            {\r\n                props.textPieces.map((piece, index) => (\r\n                    <TextItem\r\n                        key={index}\r\n                        piece={piece}\r\n                        index={index}\r\n                        cursorPosition={index === cursor.index ? cursor.position : null}\r\n                        addBreak={addBreak}\r\n                        removeBreak={removeBreak}\r\n                        onChange={textTypingHandler} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        textPieces: state.textPieces,\r\n        caretPosition: state.selectionRange,\r\n        pieceIndex: state.pieceIndex,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeText: (pieceIndex, content, caretPosition) => { dispatch(changeTextActionCreator(pieceIndex, content, caretPosition)) },\r\n        addTextBreak: (pieceIndex, caretPosition) => { dispatch(addBreakActionCreator(pieceIndex, caretPosition)) },\r\n        removeTextBreak: (currentIndex, removeIndex) => { dispatch(removeBreakActionCreator(currentIndex, removeIndex)) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TextArea);\r\n","import React from 'react';\r\n\r\nimport Header from '../Header/Header';\r\nimport TextArea from '../TextArea/TextArea';\r\n\r\nconst Layout = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <TextArea />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Layout from './components/Layout/Layout';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './store/reducer';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}